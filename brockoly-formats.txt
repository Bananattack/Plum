
Header: 
-----------------
brockoly-<format>-<version-string>-<parser> CR LF

Should be a line of at most 127 characters length.

Format should be a name of at most 32 characters long.
Parser should be a name of at most 32 characters long.

Version Compatiblity
-----------------
Version string is of form
	AAAABBCC
		(where A = major version part B = minor version C = dev version)
and is treated as a hexadecimal unsigned int.

If version is less than current, the parser should try and salvage and convert to a non-deprecated format if possible. If any critical changes occur between versions, either salvage what you can (with warnings) or error (depending on how critical that backwards compatibility is)

If version number is too great, it'll either try to parse anyways and hope for forwards compatibility or error (depending on how critical that forwards compatibility is).

Parsers
-----------------
*All* formats should be able to be parsed as mungo scripts, with tile data and other big blocks of data as encoded and compressed strings. There will also eventually be some binary representation parser for finalized game resources or something.

Any other parser besides the builtin ones desired can be added through plugging in some function pointers or an implementing an interface of some sort. This could be used to contain things like verge3 maps or something silly -- and then you could switch between editors by simply stripping the brockoly heading during the other manipulations.

The parsers called by brockoly shall return some sort of table (hash table/dictionary likely), that can be handled by the brockoly format loader, post-parse with fair ease.

The table entries "__version", "__format" and "__parser" are reserved and are stored for internal debug use.

Encoding
-----------------
By default, there's a "none" encoding used to indicate that no translation need occur on the blob of data we loaded besides any compression related stuff. Encoding/decoding is typically "base64" or "hex" of the data. Encoding happens after compression. Decoding happens before decompression.

Compression
-----------------
Compression is by default "none", but there are also the following options: "rle" (run length encoding), "rle_plain" (like RLE but comma separated and human readable numbers instead of binary) and "zlib". Encoding happens after compression. Decoding happens before decompression.

NOTE: No compression implies each *piece_length* bytes of the string stored is a separate piece of data (which might not be what you want, depending). piece_length of chunks can be ignored by non-binary formats if handled smartly

File extensions
-----------------
	These names are to be the conventional file extensions for the brockoly file formats.

	DOS-style extensions (just to give support if you need/want 8.3 filenames)
	-----------------
	res.wld
	grasslnd.are
	grass.set
	hero.spr

	Full length extensions
	-----------------
	resonance.world
	grassland.area
	grass.tileset
	hero.sprite

	Explicit extensions
	-----------------
	resonance.brockoly-world
	grassland.brockoly-area
	grass.brockoly-tileset
	hero.brockoly-sprite

File references
-----------------
File resource extensions between brockoly internal formats are implicit, so don't write out the whole name.
For example a reference for a sprite "hero" will look for "hero.spr", "hero.sprite", "hero.brockoly-sprite".
Putting in "hero.sprite" will look for "hero.sprite.[spr|sprite|brockoly-sprite]" (which will probably fail) and so on, so DON'T do it plsthx.


World example:
-----------------
brockoly-world-0.1 mungo
* areas
	# 1: grassland
	# 2: minecart
	# 3: forest
* connections:
	# 1	- type: indirect
	   	- start
	   		+ map: grassland
	   		+ node: to_minecart
		- end
			+ map: minecart
			+ node: to_grassland
	# 2	- type: direct
		- start
			+ map: grassland
			+ node: to_forest
			+ direction: left
		- end
			+ map: forest
			+ node: to_forest
			+ direction: right
Area example:
-----------------

brockoly-area-0.1 mungo
* title: "Grassland"
* compression: zlib
* encoding: base64
* tileset: grass
* song: "songs/grassyhappywin.xm"
* render_ordering: "1,2"
* minimap_data: "sdfgjsdfsdfsdjfsdhfsdfsdfjhsdfnweriuwerhnweiurwebnriweurbwieurbweirub"
* layers
	#1	- name: "background"
		- lucent: 0
		- width: 100
		- height: 100
		- tile_data: "dfkjsdt9iu4h5304865345=4547==-8-5858makingupfakebase64huegcompressedstringorsomeshit"
		- zone_data: "zoniudfghnidufgnhreiouthenrtiyouertieurnteirutneriutneritnert"
		- obs_data: "obsbssbsbs908456084u6046ijkriyjmdogbnlmnldfkgl;sadropierjwoirjewroiwejrwer"
	#2
		- name: "foreground"
		- lucent: 0
		- width: 100
		- height: 100
		- tile_data: "fokgretiouerhteioruthnerituncvklbmn,bm fghlkgfhlkmfgkhlmfglhkmfghlkfmghlkfmghlkfmFAKEstringAGAINghlkmfgh"
		- zone_data: "zoniudfghnidufgnhreiouthenrtiyouertieurnteirutneriutneritnert"
		- obs_data: "obsbssbsbs908456084u6046ijkriyjmdogbnlmnldfkgl;sadropierjwoirjewroiwejrwer"
* doors
	- to_minecart
		+ x: 12
		+ y: 94
		+ x2: 14
		+ y2: 96
	- to_forest
		+ x: 0
		+ y: 15
		+ x2: 2
		+ y2: 20